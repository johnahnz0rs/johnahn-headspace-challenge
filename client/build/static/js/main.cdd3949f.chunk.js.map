{"version":3,"sources":["components/SearchResult.js","components/Search.js","components/FavoritedPost.js","components/Home.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["SearchResult","props","react_default","a","createElement","Fragment","style","padding","margin","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","something","nothing","searchResults","sampleMethod","bind","assertThisInitialized","console","log","event","name","target","value","setState","defineProperty","border","display","marginLeft","marginRight","width","color","textAlign","fontFamily","components_SearchResult","result","React","Component","FavoritedPost","Home","backendURL","className","id","components_Search","components_FavoritedPost","ContentArea","Route","exact","path","component","App","BrowserRouter","components_ContentArea","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdd3949f.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchResult = (props) => {\n\n    const style = {padding: \"10px\", margin: \"0 auto\"};\n\n    return (\n\n        <React.Fragment>\n            <div style={style}>\n                <span>Search Result some text </span>\n            </div>\n        </React.Fragment>\n\n\n    );\n\n};\n\nexport default SearchResult;","import React from \"react\";\nimport SearchResult from './SearchResult';\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: 'johnahnz0rsisl33t.com',\n            something: 'lol',\n            nothing: 0,\n            searchResults: ''\n        };\n        this.sampleMethod = this.sampleMethod.bind(this);\n    };\n\n    componentDidMount() {\n        console.log('*** lol johnahnz0rs is l33t ***');\n    }\n\n    sampleMethod() {\n        // your code here\n    }\n\n    inputHandler(event) {\n        let name = event.target.name,\n            value = event.target.value;\n        this.setState({[name]: value});\n    }\n\n    render(){\n\n        // this.props.img_url = 'http://via.placeholder.com/350x150'\n        const style = {\n            padding: '10px',\n            border: '1px solid green',\n            display: 'block',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            width: '50%',\n            color: '#4db1e8',\n            textAlign: 'center',\n            fontFamily: 'sans-serif'\n        };\n\n        return (\n            <React.Fragment>\n                <div style={style}>\n                    <h1>{this.state.title}</h1>\n\n                    {this.state.searchResults && <SearchResult result={this.state.searchResults} />}\n\n                </div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Search;","import React from 'react';\n\nconst FavoritedPost = (props) => {\n\n    const style = {padding: \"10px\", margin: \"0 auto\"};\n\n    return (\n\n        <React.Fragment>\n            <div style={style}>\n                <span>lol johnahnz0rs is l33t on FavoritedPost</span>\n            </div>\n        </React.Fragment>\n\n\n    );\n\n};\n\nexport default FavoritedPost;","import React from 'react';\nimport Search from './Search';\nimport FavoritedPost from \"./FavoritedPost\";\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            something: '{lol: \"yas\"}',\n            nothing: 0,\n            backendURL: 'http://localhost:5000',\n            style: \"border-right: 1px solid black; color: '#4db1e8';\"\n        };\n        this.sampleMethod = this.sampleMethod.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('*** johnahnz0rs is l33t on Home ***');\n        // your code here\n    }\n\n    sampleMethod() {\n        console.log('*** johnahnz0rs is l33t this is sampleMethod() ***');\n    }\n\n    // const backendURL='http://localhost:5000';\n\n    render() {\n        return (\n\n          <React.Fragment>\n\n              <div className=\"container\">\n                  <div id=\"col-search-comp\" className=\"col-sm-12 col-md-6\">\n                      {/* your code here */}\n                      <span>lol johnahnz0rs is l33t</span>\n                      <Search />\n                  </div>\n                  <div id=\"col-favorites-comp\" className=\"col-sm-12 col-md-6\">\n                      <FavoritedPost />\n\n                  </div>\n              </div>\n          </React.Fragment>\n\n        );\n    }\n};\n\n// import React, { Component } from 'react';\n//\n// class App extends Component {\n//     constructor(props) {\n//     super(props);\n//\n//     this.state = {\n//     isShow: true,\n// };\n// }\n//\n//     toggleShow = () => {\n//     this.setState(state => ({ isShow: !state.isShow }));\n// };\n//\n//     render() {\n//     return (\n//     <div>\n//     {this.state.isShow ? <Greeting greeting={greeting} /> : null}\n//\n//     <button onClick={this.toggleShow} type=\"button\">\n//     Toggle Show\n//     </button>\n//     </div>\n//     );\n// }\n// }\n//\n// const Greeting = ({ greeting }) => <h1>{greeting}</h1>;\n//\n// export default App;\n\n\nexport default Home;","import React from 'react';\nimport { Route } from 'react-router-dom';\n// import User from './User';\n// import AgiliqTest from './AgiliqTest';\nimport Home from './Home';\n\n\nconst ContentArea = props => {\n\n    return (\n        <React.Fragment>\n            <div className=\"root-div\">\n\n                {/*<Route exact path=\"/\" component={Login} />*/}\n                {/*<Route path=\"/user\" component={User} />*/}\n                {/*<Route path=\"/profile/:id\" component={Profile} />*/}\n\n                {/*<Route exact path = \"/\" component={AgiliqTest} />*/}\n                <Route exact path = \"/\" component={Home} />\n\n            </div>\n        </React.Fragment>\n    );\n\n};\n\nexport default ContentArea;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n\nclass App extends Component {\n\n  state = {\n    // response: ''\n  };\n\n  componentDidMount() {\n    // this.callAPI()\n    //     .then(res => this.setState({response: res.express}))\n    //     .catch(err => console.log(err));\n  }\n\n  // callAPI = async () => {\n  //   const response = await fetch('/api/hello');\n  //   const body = await response.json();\n  //   if (response.status !== 200) { throw Error(body.message) };\n  //   return body;\n  // };\n\n  render() {\n    return (\n      <BrowserRouter>\n          <React.Fragment>\n              <ContentArea />\n          </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}